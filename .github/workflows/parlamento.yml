name: Atualizar dados Parlamento

on:
  schedule:
    - cron: '0 3 * * *'        # todos os dias 03-h UTC
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # criar/atualizar release e assets

    steps:
    # 1) checkout somente o código
    - uses: actions/checkout@v4

    # 2) Gera os CSVs dentro do DevContainer
    - name: Executar dentro do DevContainer
      uses: devcontainers/ci@v0.3
      with:
        devcontainerPath: .devcontainer
        runCmd: |
          pip install --no-cache-dir -r requirements.txt
          python scripts/parlamento_scraper.py
        push: never            # não faz push da imagem

    # 3) Garante que o release “latest-data” exista (cria se precisar)
    - name: Criar release rolling (se necessário)
      run: |
        set -e
        if ! gh release view latest-data &>/dev/null; then
          gh release create latest-data \
            --title "Últimos dados do Parlamento" \
            --notes "Artefatos CSV atualizados diariamente" \
            --prerelease
        fi

    # 4) Envia (ou sobrescreve) cada CSV como asset
    - name: Publicar CSVs como assets
      run: |
        gh release upload latest-data data/*.csv --clobber   # overwrite se já existir :contentReference[oaicite:0]{index=0}
